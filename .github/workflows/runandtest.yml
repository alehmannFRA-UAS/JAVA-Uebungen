# This is the basic workflow for testing build and others
name: CI for building and testing project and publish a package

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Setup the JAVA JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 17

      # Cache for Maven    
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven- 

      # Build with Maven
      - name: Build project with Maven
        run: mvn -B package --file pom.xml
    
  testing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1.0.3
              
      - name: Checkstyle for Java        
        uses: dbelyaev/action-checkstyle@v0.5.1
        with:
          github_token: ${{ secrets.github_token }}
          checkstyle_config: checkstyle.xml
          workdir: ./src/main/java
          reporter: github-check #github-pr-review
          level: warning
      
      - name: Run PMD
        uses: kemsakurai/action-pmd@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-check' #'github-pr-review'
          tool_name: 'pmd_reviewdog'
      
      - name: Build and Run JUNIT Tests
        run: mvn test --batch-mode --fail-at-end
      
      - name: Publish unit test reports
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
      
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'Github workflow'
            git config --global user.email 'nowhere@gmail.com'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push
          fi
          
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco/
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  
  publish:
    runs-on: ubuntu-latest
    needs: [build, testing]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # Build with Maven without testing
      - name: Build project with Maven
        run: mvn -B package --file pom.xml -DskipTests

      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging

      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
