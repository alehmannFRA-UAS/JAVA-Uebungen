# This is the basic workflow for testing build and others
name: CI for building and testing project and publish a package

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Setup the JAVA JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 17
      # Cache for Maven    
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2   
      # Build with Maven
      - name: Build project with Maven
        run: mvn -B package --file pom.xml
    
  testing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1.0.3
              
      - name: Checkstyle for Java        
        uses: dbelyaev/action-checkstyle@v0.5.1
        with:
          github_token: ${{ secrets.github_token }}
          checkstyle_config: checkstyle.xml
          workdir: ./src/main/java
          reporter: github-check #github-pr-review
          level: warning
      
      - name: Run PMD
        uses: kemsakurai/action-pmd@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-check' #'github-pr-review'
          tool_name: 'pmd_reviewdog'
  
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      # Build with Maven without testing
      - name: Build project with Maven
        run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging  cp target/*jar-withdependencies.jar staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging
